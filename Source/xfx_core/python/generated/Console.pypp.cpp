// This file has been generated by Py++.

#include "xfx.h"
#include "boost/python.hpp"
#include "xfx_py_bindings.h"
#include "console.pypp.hpp"

namespace bp = boost::python;

struct Console_wrapper : xfx::Console, bp::wrapper< xfx::Console > {

    Console_wrapper( )
    : xfx::Console( )
      , bp::wrapper< xfx::Console >(){
        // null constructor
    
    }

    virtual void Clear(  ){
        bp::override func_clear = this->get_override( "clear" );
        func_clear(  );
    }

    virtual bool IsVisible(  ) const {
        bp::override func_is_visible = this->get_override( "is_visible" );
        return func_is_visible(  );
    }

    virtual void Print( ::xfx::Log::EMessageType const & type, ::xfx::WString const & msg ){
        bp::override func_print = this->get_override( "print" );
        func_print( type, msg );
    }

    virtual void Toggle(  ){
        bp::override func_toggle = this->get_override( "toggle" );
        func_toggle(  );
    }

};

void register_Console_class(){

    { //::xfx::Console
        typedef bp::class_< Console_wrapper, boost::noncopyable > Console_exposer_t;
        Console_exposer_t Console_exposer = Console_exposer_t( "Console", bp::init< >() );
        bp::scope Console_scope( Console_exposer );
        { //::xfx::Console::Clear
        
            typedef void ( ::xfx::Console::*clear_function_type )(  ) ;
            
            Console_exposer.def( 
                "clear"
                , bp::pure_virtual( clear_function_type(&::xfx::Console::Clear) ) );
        
        }
        { //::xfx::Console::IsVisible
        
            typedef bool ( ::xfx::Console::*is_visible_function_type )(  ) const;
            
            Console_exposer.def( 
                "is_visible"
                , bp::pure_virtual( is_visible_function_type(&::xfx::Console::IsVisible) ) );
        
        }
        { //::xfx::Console::Print
        
            typedef void ( ::xfx::Console::*print_function_type )( ::xfx::Log::EMessageType const &,::xfx::WString const & ) ;
            
            Console_exposer.def( 
                "print"
                , bp::pure_virtual( print_function_type(&::xfx::Console::Print) )
                , ( bp::arg("type"), bp::arg("msg") ) );
        
        }
        { //::xfx::Console::Toggle
        
            typedef void ( ::xfx::Console::*toggle_function_type )(  ) ;
            
            Console_exposer.def( 
                "toggle"
                , bp::pure_virtual( toggle_function_type(&::xfx::Console::Toggle) ) );
        
        }
        bp::register_ptr_to_python< boost::shared_ptr< xfx::Console > >();
        bp::register_ptr_to_python< boost::shared_ptr< xfx::Console const > >( );
        bp::implicitly_convertible< boost::shared_ptr< xfx::Console >, boost::shared_ptr< xfx::Console const > >( );
    }

}
