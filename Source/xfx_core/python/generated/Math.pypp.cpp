// This file has been generated by Py++.

#include "xfx.h"
#include "boost/python.hpp"
#include "xfx_py_bindings.h"
#include "math.pypp.hpp"

namespace bp = boost::python;

void register_Math_class(){

    { //::xfx::Math
        typedef bp::class_< xfx::Math, bp::bases< xfx::Singleton< xfx::Math > >, boost::noncopyable > Math_exposer_t;
        Math_exposer_t Math_exposer = Math_exposer_t( "Math", bp::no_init );
        bp::scope Math_scope( Math_exposer );
        { //::xfx::Math::Cos
        
            typedef float ( ::xfx::Math::*cos_function_type )( int ) const;
            
            Math_exposer.def( 
                "cos"
                , cos_function_type( &::xfx::Math::Cos )
                , ( bp::arg("ang") ) );
        
        }
        { //::xfx::Math::Sin
        
            typedef float ( ::xfx::Math::*sin_function_type )( int ) const;
            
            Math_exposer.def( 
                "sin"
                , sin_function_type( &::xfx::Math::Sin )
                , ( bp::arg("ang") ) );
        
        }
        Math_exposer.def_readonly( "deg", xfx::Math::deg );
        Math_exposer.def_readonly( "inv_deg", xfx::Math::inv_deg );
        Math_exposer.def_readonly( "inv_pi", xfx::Math::inv_pi );
        Math_exposer.def_readonly( "inv_rad", xfx::Math::inv_rad );
        Math_exposer.def_readonly( "pi", xfx::Math::pi );
        Math_exposer.def_readonly( "rad", xfx::Math::rad );
        Math_exposer.def_readonly( "real_inv_pi", xfx::Math::real_inv_pi );
        Math_exposer.def_readonly( "real_pi", xfx::Math::real_pi );
        bp::register_ptr_to_python< boost::shared_ptr< xfx::Math const > >( );
        bp::implicitly_convertible< boost::shared_ptr< xfx::Math >, boost::shared_ptr< xfx::Math const > >( );
    }

}
