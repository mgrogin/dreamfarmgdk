// This file has been generated by Py++.

#include "xfx.h"
#include "boost/python.hpp"
#include "xfx_py_bindings.h"
#include "rendertargetgroup.pypp.hpp"

namespace bp = boost::python;

void register_RenderTargetGroup_class(){

    { //::xfx::RenderTargetGroup
        typedef bp::class_< xfx::RenderTargetGroup, boost::noncopyable > RenderTargetGroup_exposer_t;
        RenderTargetGroup_exposer_t RenderTargetGroup_exposer = RenderTargetGroup_exposer_t( "RenderTargetGroup", bp::init< >() );
        bp::scope RenderTargetGroup_scope( RenderTargetGroup_exposer );
        { //::xfx::RenderTargetGroup::BeginUsing
        
            typedef ::HRESULT ( ::xfx::RenderTargetGroup::*begin_using_function_type )( bool ) ;
            
            RenderTargetGroup_exposer.def( 
                "begin_using"
                , begin_using_function_type( &::xfx::RenderTargetGroup::BeginUsing )
                , ( bp::arg("push_state")=(bool)(true) ) );
        
        }
        { //::xfx::RenderTargetGroup::CreateCompatibleDepthStencil
        
            typedef ::HRESULT ( ::xfx::RenderTargetGroup::*create_compatible_depth_stencil_function_type )(  ) ;
            
            RenderTargetGroup_exposer.def( 
                "create_compatible_depth_stencil"
                , create_compatible_depth_stencil_function_type( &::xfx::RenderTargetGroup::CreateCompatibleDepthStencil ) );
        
        }
        { //::xfx::RenderTargetGroup::EndUsing
        
            typedef void ( ::xfx::RenderTargetGroup::*end_using_function_type )( bool ) ;
            
            RenderTargetGroup_exposer.def( 
                "end_using"
                , end_using_function_type( &::xfx::RenderTargetGroup::EndUsing )
                , ( bp::arg("pop_state")=(bool)(true) ) );
        
        }
        { //::xfx::RenderTargetGroup::SetDepthStencil
        
            typedef ::HRESULT ( ::xfx::RenderTargetGroup::*set_depth_stencil_function_type )( ::boost::shared_ptr< xfx::DepthStencil > const & ) ;
            
            RenderTargetGroup_exposer.def( 
                "set_depth_stencil"
                , set_depth_stencil_function_type( &::xfx::RenderTargetGroup::SetDepthStencil )
                , ( bp::arg("ds") ) );
        
        }
        { //::xfx::RenderTargetGroup::SetRenderedTexture
        
            typedef ::HRESULT ( ::xfx::RenderTargetGroup::*set_rendered_texture_function_type )( ::boost::shared_ptr< xfx::RenderedTexture > const & ) ;
            
            RenderTargetGroup_exposer.def( 
                "set_rendered_texture"
                , set_rendered_texture_function_type( &::xfx::RenderTargetGroup::SetRenderedTexture )
                , ( bp::arg("tex") ) );
        
        }
        { //property "clear_flags"[fget=::xfx::RenderTargetGroup::GetClearFlags, fset=::xfx::RenderTargetGroup::SetClearFlags]
        
            typedef ::DWORD const & ( ::xfx::RenderTargetGroup::*fget )(  ) const;
            typedef void ( ::xfx::RenderTargetGroup::*fset )( ::DWORD const & ) ;
            
            RenderTargetGroup_exposer.add_property( 
                "clear_flags"
                , bp::make_function( 
                      fget( &::xfx::RenderTargetGroup::GetClearFlags )
                    , bp::return_value_policy< bp::copy_const_reference >() ) 
                , fset( &::xfx::RenderTargetGroup::SetClearFlags )
                , "get\\set property, built on top of \"DWORD const & xfx::RenderTargetGroup::GetClearFlags() const [member function]\" and \"void xfx::RenderTargetGroup::SetClearFlags(DWORD const & fl) [member function]\"" );
        
        }
        { //property "clear_color"[fget=::xfx::RenderTargetGroup::GetClearColor, fset=::xfx::RenderTargetGroup::SetClearColor]
        
            typedef ::xfx::ARGB const & ( ::xfx::RenderTargetGroup::*fget )(  ) const;
            typedef void ( ::xfx::RenderTargetGroup::*fset )( ::xfx::ARGB const & ) ;
            
            RenderTargetGroup_exposer.add_property( 
                "clear_color"
                , bp::make_function( 
                      fget( &::xfx::RenderTargetGroup::GetClearColor )
                    , bp::return_value_policy< bp::copy_const_reference >() ) 
                , fset( &::xfx::RenderTargetGroup::SetClearColor )
                , "get\\set property, built on top of \"xfx::ARGB const & xfx::RenderTargetGroup::GetClearColor() const [member function]\" and \"void xfx::RenderTargetGroup::SetClearColor(xfx::ARGB const & c) [member function]\"" );
        
        }
        { //property "clear_depth"[fget=::xfx::RenderTargetGroup::GetClearDepth, fset=::xfx::RenderTargetGroup::SetClearDepth]
        
            typedef float const & ( ::xfx::RenderTargetGroup::*fget )(  ) const;
            typedef void ( ::xfx::RenderTargetGroup::*fset )( float const & ) ;
            
            RenderTargetGroup_exposer.add_property( 
                "clear_depth"
                , bp::make_function( 
                      fget( &::xfx::RenderTargetGroup::GetClearDepth )
                    , bp::return_value_policy< bp::copy_const_reference >() ) 
                , fset( &::xfx::RenderTargetGroup::SetClearDepth )
                , "get\\set property, built on top of \"float const & xfx::RenderTargetGroup::GetClearDepth() const [member function]\" and \"void xfx::RenderTargetGroup::SetClearDepth(float const & d) [member function]\"" );
        
        }
        { //property "clear_stencil"[fget=::xfx::RenderTargetGroup::GetClearStencil, fset=::xfx::RenderTargetGroup::SetClearStencil]
        
            typedef ::DWORD const & ( ::xfx::RenderTargetGroup::*fget )(  ) const;
            typedef void ( ::xfx::RenderTargetGroup::*fset )( ::DWORD const & ) ;
            
            RenderTargetGroup_exposer.add_property( 
                "clear_stencil"
                , bp::make_function( 
                      fget( &::xfx::RenderTargetGroup::GetClearStencil )
                    , bp::return_value_policy< bp::copy_const_reference >() ) 
                , fset( &::xfx::RenderTargetGroup::SetClearStencil )
                , "get\\set property, built on top of \"DWORD const & xfx::RenderTargetGroup::GetClearStencil() const [member function]\" and \"void xfx::RenderTargetGroup::SetClearStencil(DWORD const & v) [member function]\"" );
        
        }
        { //property "active"[fget=::xfx::RenderTargetGroup::IsActive]
        
            typedef bool ( ::xfx::RenderTargetGroup::*fget )(  ) const;
            
            RenderTargetGroup_exposer.add_property( 
                "active"
                , fget( &::xfx::RenderTargetGroup::IsActive )
                , "get property, built on top of \"bool xfx::RenderTargetGroup::IsActive() const [member function]\"" );
        
        }
        { //property "rendered_texture"[fget=::xfx::RenderTargetGroup::GetRenderedTexture]
        
            typedef ::boost::shared_ptr<xfx::RenderedTexture> const & ( ::xfx::RenderTargetGroup::*fget )(  ) const;
            
            RenderTargetGroup_exposer.add_property( 
                "rendered_texture"
                , bp::make_function( 
                      fget( &::xfx::RenderTargetGroup::GetRenderedTexture )
                    , bp::return_value_policy< bp::copy_const_reference >() ) 
                , "get property, built on top of \"boost::shared_ptr<xfx::RenderedTexture> const & xfx::RenderTargetGroup::GetRenderedTexture() const [member function]\"" );
        
        }
        { //property "depth_stencil"[fget=::xfx::RenderTargetGroup::GetDepthStencil]
        
            typedef ::boost::shared_ptr<xfx::DepthStencil> const & ( ::xfx::RenderTargetGroup::*fget )(  ) const;
            
            RenderTargetGroup_exposer.add_property( 
                "depth_stencil"
                , bp::make_function( 
                      fget( &::xfx::RenderTargetGroup::GetDepthStencil )
                    , bp::return_value_policy< bp::copy_const_reference >() ) 
                , "get property, built on top of \"boost::shared_ptr<xfx::DepthStencil> const & xfx::RenderTargetGroup::GetDepthStencil() const [member function]\"" );
        
        }
        bp::register_ptr_to_python< boost::shared_ptr< xfx::RenderTargetGroup const > >( );
        bp::implicitly_convertible< boost::shared_ptr< xfx::RenderTargetGroup >, boost::shared_ptr< xfx::RenderTargetGroup const > >( );
    }

}
