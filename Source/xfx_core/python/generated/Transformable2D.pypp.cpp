// This file has been generated by Py++.

#include "xfx.h"
#include "boost/python.hpp"
#include "xfx_py_bindings.h"
#include "transformable2d.pypp.hpp"

namespace bp = boost::python;

void register_Transformable2D_class(){

    { //::xfx::Transformable2D
        typedef bp::class_< xfx::Transformable2D > Transformable2D_exposer_t;
        Transformable2D_exposer_t Transformable2D_exposer = Transformable2D_exposer_t( "Transformable2D", bp::init< >() );
        bp::scope Transformable2D_scope( Transformable2D_exposer );
        { //::xfx::Transformable2D::ResetTransform
        
            typedef void ( ::xfx::Transformable2D::*reset_transform_function_type )( ::xfx::Vec2 const &,int const &,::xfx::Vec2 const & ) ;
            
            Transformable2D_exposer.def( 
                "reset_transform"
                , reset_transform_function_type( &::xfx::Transformable2D::ResetTransform )
                , ( bp::arg("pos"), bp::arg("rot"), bp::arg("scale") ) );
        
        }
        { //property "position"[fget=::xfx::Transformable2D::GetPosition, fset=::xfx::Transformable2D::SetPosition]
        
            typedef ::xfx::Vec2 const & ( ::xfx::Transformable2D::*fget )(  ) const;
            typedef void ( ::xfx::Transformable2D::*fset )( ::xfx::Vec2 const & ) ;
            
            Transformable2D_exposer.add_property( 
                "position"
                , bp::make_function( 
                      fget( &::xfx::Transformable2D::GetPosition )
                    , bp::return_value_policy< bp::copy_const_reference >() ) 
                , fset( &::xfx::Transformable2D::SetPosition )
                , "get\\set property, built on top of \"xfx::Vec2 const & xfx::Transformable2D::GetPosition() const [member function]\" and \"void xfx::Transformable2D::SetPosition(xfx::Vec2 const & pos) [member function]\"" );
        
        }
        { //property "rotation"[fget=::xfx::Transformable2D::GetRotation, fset=::xfx::Transformable2D::SetRotation]
        
            typedef int const & ( ::xfx::Transformable2D::*fget )(  ) const;
            typedef void ( ::xfx::Transformable2D::*fset )( int const & ) ;
            
            Transformable2D_exposer.add_property( 
                "rotation"
                , bp::make_function( 
                      fget( &::xfx::Transformable2D::GetRotation )
                    , bp::return_value_policy< bp::copy_const_reference >() ) 
                , fset( &::xfx::Transformable2D::SetRotation )
                , "get\\set property, built on top of \"int const & xfx::Transformable2D::GetRotation() const [member function]\" and \"void xfx::Transformable2D::SetRotation(int const & rot) [member function]\"" );
        
        }
        { //property "scale"[fget=::xfx::Transformable2D::GetScale, fset=::xfx::Transformable2D::SetScale]
        
            typedef ::xfx::Vec2 const & ( ::xfx::Transformable2D::*fget )(  ) const;
            typedef void ( ::xfx::Transformable2D::*fset )( ::xfx::Vec2 const & ) ;
            
            Transformable2D_exposer.add_property( 
                "scale"
                , bp::make_function( 
                      fget( &::xfx::Transformable2D::GetScale )
                    , bp::return_value_policy< bp::copy_const_reference >() ) 
                , fset( &::xfx::Transformable2D::SetScale )
                , "get\\set property, built on top of \"xfx::Vec2 const & xfx::Transformable2D::GetScale() const [member function]\" and \"void xfx::Transformable2D::SetScale(xfx::Vec2 const & scale) [member function]\"" );
        
        }
        { //property "transformation"[fget=::xfx::Transformable2D::GetTransformation]
        
            typedef ::xfx::Mat3 const & ( ::xfx::Transformable2D::*fget )(  ) const;
            
            Transformable2D_exposer.add_property( 
                "transformation"
                , bp::make_function( 
                      fget( &::xfx::Transformable2D::GetTransformation )
                    , bp::return_value_policy< bp::copy_const_reference >() ) 
                , "get property, built on top of \"xfx::Mat3 const & xfx::Transformable2D::GetTransformation() const [member function]\"" );
        
        }
        bp::register_ptr_to_python< boost::shared_ptr< xfx::Transformable2D const > >( );
        bp::implicitly_convertible< boost::shared_ptr< xfx::Transformable2D >, boost::shared_ptr< xfx::Transformable2D const > >( );
    }

}
