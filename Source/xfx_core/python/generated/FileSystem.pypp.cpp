// This file has been generated by Py++.

#include "xfx.h"
#include "boost/python.hpp"
#include "__convenience.pypp.hpp"
#include "__call_policies.pypp.hpp"
#include "xfx_py_bindings.h"
#include "filesystem.pypp.hpp"

namespace bp = boost::python;

static boost::python::tuple GetFileSize_45c0dc470db8825a743fb43cb5c91424( ::xfx::FileSystem const & inst, ::xfx::String const & file ){
    long unsigned int len2;
    ::HRESULT result = inst.GetFileSize(file, len2);
    return bp::make_tuple( result, len2 );
}

void register_FileSystem_class(){

    { //::xfx::FileSystem
        typedef bp::class_< xfx::FileSystem, bp::bases< xfx::Singleton< xfx::FileSystem > >, boost::noncopyable > FileSystem_exposer_t;
        FileSystem_exposer_t FileSystem_exposer = FileSystem_exposer_t( "FileSystem", bp::no_init );
        bp::scope FileSystem_scope( FileSystem_exposer );
        bp::enum_< xfx::FileSystem::ESearchPathPriority>("ESearchPathPriority")
            .value("ESPP_LOW", xfx::FileSystem::ESPP_LOW)
            .value("ESPP_HIGH", xfx::FileSystem::ESPP_HIGH)
            .export_values()
            ;
        { //::xfx::FileSystem::AddPack
        
            typedef void ( ::xfx::FileSystem::*add_pack_function_type )( ::boost::shared_ptr< xfx::Pack > const & ) ;
            
            FileSystem_exposer.def( 
                "add_pack"
                , add_pack_function_type( &::xfx::FileSystem::AddPack )
                , ( bp::arg("pack") ) );
        
        }
        { //::xfx::FileSystem::AddSearchPath
        
            typedef bool ( ::xfx::FileSystem::*add_search_path_function_type )( ::xfx::String const &,::xfx::FileSystem::ESearchPathPriority const & ) ;
            
            FileSystem_exposer.def( 
                "add_search_path"
                , add_search_path_function_type( &::xfx::FileSystem::AddSearchPath )
                , ( bp::arg("path"), bp::arg("priority")=::xfx::FileSystem::ESPP_HIGH ) );
        
        }
        { //::xfx::FileSystem::FindFile
        
            typedef ::HRESULT ( ::xfx::FileSystem::*find_file_function_type )( ::xfx::String const &,::boost::shared_ptr< xfx::Pack > *,::xfx::String * ) const;
            
            FileSystem_exposer.def( 
                "find_file"
                , find_file_function_type( &::xfx::FileSystem::FindFile )
                , ( bp::arg("file"), bp::arg("pack")=bp::object(), bp::arg("phys_path")=bp::object() ) );
        
        }
        { //::xfx::FileSystem::GetFileSize
        
            typedef boost::python::tuple ( *get_file_size_function_type )( ::xfx::FileSystem const &,::xfx::String const & );
            
            FileSystem_exposer.def( 
                "get_file_size"
                , get_file_size_function_type( &GetFileSize_45c0dc470db8825a743fb43cb5c91424 )
                , ( bp::arg("inst"), bp::arg("file") ) );
        
        }
        { //::xfx::FileSystem::ReadFile
        
            typedef ::HRESULT ( ::xfx::FileSystem::*read_file_function_type )( ::xfx::String const &,void * ) const;
            
            FileSystem_exposer.def( 
                "read_file"
                , read_file_function_type( &::xfx::FileSystem::ReadFile )
                , ( bp::arg("file"), bp::arg("buf") ) );
        
        }
        { //::xfx::FileSystem::RemoveAllPacks
        
            typedef void ( ::xfx::FileSystem::*remove_all_packs_function_type )(  ) ;
            
            FileSystem_exposer.def( 
                "remove_all_packs"
                , remove_all_packs_function_type( &::xfx::FileSystem::RemoveAllPacks ) );
        
        }
        { //::xfx::FileSystem::RemoveAllSearchPaths
        
            typedef void ( ::xfx::FileSystem::*remove_all_search_paths_function_type )(  ) ;
            
            FileSystem_exposer.def( 
                "remove_all_search_paths"
                , remove_all_search_paths_function_type( &::xfx::FileSystem::RemoveAllSearchPaths ) );
        
        }
        { //::xfx::FileSystem::RemoveSearchPath
        
            typedef void ( ::xfx::FileSystem::*remove_search_path_function_type )( ::xfx::String const & ) ;
            
            FileSystem_exposer.def( 
                "remove_search_path"
                , remove_search_path_function_type( &::xfx::FileSystem::RemoveSearchPath )
                , ( bp::arg("path") ) );
        
        }
        { //::xfx::FileSystem::WriteFile
        
            typedef ::HRESULT ( ::xfx::FileSystem::*write_file_function_type )( ::xfx::String const &,void const *,long unsigned int ) const;
            
            FileSystem_exposer.def( 
                "write_file"
                , write_file_function_type( &::xfx::FileSystem::WriteFile )
                , ( bp::arg("file"), bp::arg("buf"), bp::arg("len") ) );
        
        }
        bp::register_ptr_to_python< boost::shared_ptr< xfx::FileSystem const > >( );
        bp::implicitly_convertible< boost::shared_ptr< xfx::FileSystem >, boost::shared_ptr< xfx::FileSystem const > >( );
    }

}
