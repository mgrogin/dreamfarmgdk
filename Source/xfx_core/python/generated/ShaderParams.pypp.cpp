// This file has been generated by Py++.

#include "xfx.h"
#include "boost/python.hpp"
#include "__convenience.pypp.hpp"
#include "__call_policies.pypp.hpp"
#include "xfx_py_bindings.h"
#include "shaderparams.pypp.hpp"

namespace bp = boost::python;

static boost::python::tuple GetValue_d65d9cf911801df59fbe3f20b37376d6( ::xfx::ShaderParams const & inst, ::xfx::String const & str ){
    xfx::Mat4 value2;
    bool result = inst.GetValue(str, value2);
    return bp::make_tuple( result, value2 );
}

static boost::python::tuple GetValue_5cbab9a6ca59191406c7a893fef6b58d( ::xfx::ShaderParams const & inst, ::xfx::String const & str ){
    xfx::Vec4 value2;
    bool result = inst.GetValue(str, value2);
    return bp::make_tuple( result, value2 );
}

static boost::python::tuple GetValue_c3d732addcbd90ff96d1a9514bb77ba8( ::xfx::ShaderParams const & inst, ::xfx::String const & str ){
    int value2;
    bool result = inst.GetValue(str, value2);
    return bp::make_tuple( result, value2 );
}

static boost::python::tuple GetValue_937e7e40a22dc045e56c1d652010b2e1( ::xfx::ShaderParams const & inst, ::xfx::String const & str ){
    float value2;
    bool result = inst.GetValue(str, value2);
    return bp::make_tuple( result, value2 );
}

static boost::python::tuple GetValue_01101cb2335665b1d8c27bd494137556( ::xfx::ShaderParams const & inst, ::xfx::String const & str ){
    boost::shared_ptr<xfx::ITexture const> value2;
    bool result = inst.GetValue(str, value2);
    return bp::make_tuple( result, value2 );
}

void register_ShaderParams_class(){

    { //::xfx::ShaderParams
        typedef bp::class_< xfx::ShaderParams > ShaderParams_exposer_t;
        ShaderParams_exposer_t ShaderParams_exposer = ShaderParams_exposer_t( "ShaderParams", bp::init< >() );
        bp::scope ShaderParams_scope( ShaderParams_exposer );
        { //::xfx::ShaderParams::ApplyValues
        
            typedef void ( ::xfx::ShaderParams::*apply_values_function_type )( ::xfx::Effect const & ) const;
            
            ShaderParams_exposer.def( 
                "apply_values"
                , apply_values_function_type( &::xfx::ShaderParams::ApplyValues )
                , ( bp::arg("eff") ) );
        
        }
        { //::xfx::ShaderParams::GetValue
        
            typedef boost::python::tuple ( *get_value_mat4_function_type )( ::xfx::ShaderParams const &,::xfx::String const & );
            
            ShaderParams_exposer.def( 
                "get_value_mat4"
                , get_value_mat4_function_type( &GetValue_d65d9cf911801df59fbe3f20b37376d6 )
                , ( bp::arg("inst"), bp::arg("str") ) );
        
        }
        { //::xfx::ShaderParams::GetValue
        
            typedef bool ( ::xfx::ShaderParams::*get_value_function_type )( ::xfx::String const &,::xfx::Mat3 & ) const;
            
            ShaderParams_exposer.def( 
                "get_value"
                , get_value_function_type( &::xfx::ShaderParams::GetValue )
                , ( bp::arg("str"), bp::arg("value") ) );
        
        }
        { //::xfx::ShaderParams::GetValue
        
            typedef boost::python::tuple ( *get_value_vec4_function_type )( ::xfx::ShaderParams const &,::xfx::String const & );
            
            ShaderParams_exposer.def( 
                "get_value_vec4"
                , get_value_vec4_function_type( &GetValue_5cbab9a6ca59191406c7a893fef6b58d )
                , ( bp::arg("inst"), bp::arg("str") ) );
        
        }
        { //::xfx::ShaderParams::GetValue
        
            typedef boost::python::tuple ( *get_value_int_function_type )( ::xfx::ShaderParams const &,::xfx::String const & );
            
            ShaderParams_exposer.def( 
                "get_value_int"
                , get_value_int_function_type( &GetValue_c3d732addcbd90ff96d1a9514bb77ba8 )
                , ( bp::arg("inst"), bp::arg("str") ) );
        
        }
        { //::xfx::ShaderParams::GetValue
        
            typedef boost::python::tuple ( *get_value_float_function_type )( ::xfx::ShaderParams const &,::xfx::String const & );
            
            ShaderParams_exposer.def( 
                "get_value_float"
                , get_value_float_function_type( &GetValue_937e7e40a22dc045e56c1d652010b2e1 )
                , ( bp::arg("inst"), bp::arg("str") ) );
        
        }
        { //::xfx::ShaderParams::GetValue
        
            typedef boost::python::tuple ( *get_value_texture_function_type )( ::xfx::ShaderParams const &,::xfx::String const & );
            
            ShaderParams_exposer.def( 
                "get_value_texture"
                , get_value_texture_function_type( &GetValue_01101cb2335665b1d8c27bd494137556 )
                , ( bp::arg("inst"), bp::arg("str") ) );
        
        }
        { //::xfx::ShaderParams::SetValue
        
            typedef void ( ::xfx::ShaderParams::*set_value_function_type )( ::xfx::String const &,::xfx::Mat4 const & ) ;
            
            ShaderParams_exposer.def( 
                "set_value"
                , set_value_function_type( &::xfx::ShaderParams::SetValue )
                , ( bp::arg("str"), bp::arg("value") ) );
        
        }
        { //::xfx::ShaderParams::SetValue
        
            typedef void ( ::xfx::ShaderParams::*set_value_function_type )( ::xfx::String const &,::xfx::Mat3 const & ) ;
            
            ShaderParams_exposer.def( 
                "set_value"
                , set_value_function_type( &::xfx::ShaderParams::SetValue )
                , ( bp::arg("str"), bp::arg("value") ) );
        
        }
        { //::xfx::ShaderParams::SetValue
        
            typedef void ( ::xfx::ShaderParams::*set_value_function_type )( ::xfx::String const &,::xfx::Vec4 const & ) ;
            
            ShaderParams_exposer.def( 
                "set_value"
                , set_value_function_type( &::xfx::ShaderParams::SetValue )
                , ( bp::arg("str"), bp::arg("value") ) );
        
        }
        { //::xfx::ShaderParams::SetValue
        
            typedef void ( ::xfx::ShaderParams::*set_value_function_type )( ::xfx::String const &,int const & ) ;
            
            ShaderParams_exposer.def( 
                "set_value"
                , set_value_function_type( &::xfx::ShaderParams::SetValue )
                , ( bp::arg("str"), bp::arg("value") ) );
        
        }
        { //::xfx::ShaderParams::SetValue
        
            typedef void ( ::xfx::ShaderParams::*set_value_function_type )( ::xfx::String const &,float const & ) ;
            
            ShaderParams_exposer.def( 
                "set_value"
                , set_value_function_type( &::xfx::ShaderParams::SetValue )
                , ( bp::arg("str"), bp::arg("value") ) );
        
        }
        { //::xfx::ShaderParams::SetValue
        
            typedef void ( ::xfx::ShaderParams::*set_value_function_type )( ::xfx::String const &,::boost::shared_ptr< xfx::ITexture const > const & ) ;
            
            ShaderParams_exposer.def( 
                "set_value"
                , set_value_function_type( &::xfx::ShaderParams::SetValue )
                , ( bp::arg("str"), bp::arg("value") ) );
        
        }
        bp::register_ptr_to_python< boost::shared_ptr< xfx::ShaderParams const > >( );
        bp::implicitly_convertible< boost::shared_ptr< xfx::ShaderParams >, boost::shared_ptr< xfx::ShaderParams const > >( );
    }

}
