// This file has been generated by Py++.

#include "xfx.h"

#include "boost/python.hpp"

#include "__convenience.pypp.hpp"

#include "__call_policies.pypp.hpp"

#include "__array_1.pypp.hpp"

#include "xfx_py_bindings.h"

#include "generated/_d3dpresent_parameters_.pypp.hpp"

#include "generated/_d3dviewport9.pypp.hpp"

#include "generated/aabb.pypp.hpp"

#include "generated/aabbtree.pypp.hpp"

#include "generated/application.pypp.hpp"

#include "generated/argb.pypp.hpp"

#include "generated/baseparticlesystem.pypp.hpp"

#include "generated/booksmanager.pypp.hpp"

#include "generated/cache_less__xfx_scope_cubemaptexture__greater_.pypp.hpp"

#include "generated/cache_less__xfx_scope_effect__greater_.pypp.hpp"

#include "generated/cache_less__xfx_scope_font__greater_.pypp.hpp"

#include "generated/cache_less__xfx_scope_mesh__greater_.pypp.hpp"

#include "generated/cache_less__xfx_scope_particlesystem__greater_.pypp.hpp"

#include "generated/cache_less__xfx_scope_shader__greater_.pypp.hpp"

#include "generated/cache_less__xfx_scope_texture__greater_.pypp.hpp"

#include "generated/caches.pypp.hpp"

#include "generated/cmd.pypp.hpp"

#include "generated/console.pypp.hpp"

#include "generated/cubemaptexture.pypp.hpp"

#include "generated/depthstencil.pypp.hpp"

#include "generated/drawtools.pypp.hpp"

#include "generated/effect.pypp.hpp"

#include "generated/engine.pypp.hpp"

#include "generated/envelope_less__float_comma__unsigned_char_comma__xfx_scope_simplelerpfn_less__float__greater___greater_.pypp.hpp"

#include "generated/envelope_less__xfx_scope_argb_comma__unsigned_char_comma__xfx_scope_simplelerpfn_less__xfx_scope_argb__greater___greater_.pypp.hpp"

#include "generated/envelope_less__xfx_scope_quaternion_comma__float_comma__xfx_scope_quaternionlerpfn__greater_.pypp.hpp"

#include "generated/envelope_less__xfx_scope_vec3_comma__float_comma__xfx_scope_simplelerpfn_less__xfx_scope_vec3__greater___greater_.pypp.hpp"

#include "generated/euler.pypp.hpp"

#include "generated/filesystem.pypp.hpp"

#include "generated/font.pypp.hpp"

#include "generated/indexbuffer.pypp.hpp"

#include "generated/input.pypp.hpp"

#include "generated/itexture.pypp.hpp"

#include "generated/key_compare.pypp.hpp"

#include "generated/log.pypp.hpp"

#include "generated/mat3.pypp.hpp"

#include "generated/mat4.pypp.hpp"

#include "generated/math.pypp.hpp"

#include "generated/mesh.pypp.hpp"

#include "generated/meshstate.pypp.hpp"

#include "generated/messagesbook.pypp.hpp"

#include "generated/obb.pypp.hpp"

#include "generated/pack.pypp.hpp"

#include "generated/particle.pypp.hpp"

#include "generated/particlesubsystem.pypp.hpp"

#include "generated/particlesystem.pypp.hpp"

#include "generated/plane.pypp.hpp"

#include "generated/primitive.pypp.hpp"

#include "generated/profilingmanager.pypp.hpp"

#include "generated/profilingobject.pypp.hpp"

#include "generated/quaternion.pypp.hpp"

#include "generated/quaternionlerpfn.pypp.hpp"

#include "generated/ray.pypp.hpp"

#include "generated/renderedtexture.pypp.hpp"

#include "generated/renderer.pypp.hpp"

#include "generated/rendertargetgroup.pypp.hpp"

#include "generated/resource.pypp.hpp"

#include "generated/script_less__std_scope_string__greater_.pypp.hpp"

#include "generated/scriptresource.pypp.hpp"

#include "generated/shader.pypp.hpp"

#include "generated/shaderparams.pypp.hpp"

#include "generated/singleton_less__xfx_scope_booksmanager__greater_.pypp.hpp"

#include "generated/singleton_less__xfx_scope_caches__greater_.pypp.hpp"

#include "generated/singleton_less__xfx_scope_cmd__greater_.pypp.hpp"

#include "generated/singleton_less__xfx_scope_engine__greater_.pypp.hpp"

#include "generated/singleton_less__xfx_scope_filesystem__greater_.pypp.hpp"

#include "generated/singleton_less__xfx_scope_input__greater_.pypp.hpp"

#include "generated/singleton_less__xfx_scope_math__greater_.pypp.hpp"

#include "generated/singleton_less__xfx_scope_profilingmanager__greater_.pypp.hpp"

#include "generated/singleton_less__xfx_scope_renderer__greater_.pypp.hpp"

#include "generated/singleton_less__xfx_scope_viewport__greater_.pypp.hpp"

#include "generated/sphere.pypp.hpp"

#include "generated/texture.pypp.hpp"

#include "generated/timer.pypp.hpp"

#include "generated/transformable2d.pypp.hpp"

#include "generated/transformable3d.pypp.hpp"

#include "generated/triangle.pypp.hpp"

#include "generated/var.pypp.hpp"

#include "generated/vec2.pypp.hpp"

#include "generated/vec3.pypp.hpp"

#include "generated/vec4.pypp.hpp"

#include "generated/vertexbuffer.pypp.hpp"

#include "generated/viewer.pypp.hpp"

#include "generated/viewport.pypp.hpp"

#include "generated/xfx_enumerations.pypp.hpp"

#include "generated/xfx_free_functions.pypp.hpp"

#include "generated/xfx_global_variables.pypp.hpp"

namespace bp = boost::python;

static boost::python::tuple ParseAngleVariable_ec1db36b443930f1d6f9ac1cbaabdf62( unsigned int pos, ::xfx::String const & str ){
    short int var2;
    ::HRESULT result = ::xfx::ParseAngleVariable(var2, pos, str);
    return bp::make_tuple( result, var2, pos );
}

static boost::python::tuple ParseBigAngleVariable_736284009baaef4f6c7c0ee4de3f9ad4( unsigned int pos, ::xfx::String const & str ){
    int var2;
    ::HRESULT result = ::xfx::ParseBigAngleVariable(var2, pos, str);
    return bp::make_tuple( result, var2, pos );
}

static boost::python::tuple TestIntersection_31cd38322ee306d71491c7ddc7dae489( ::xfx::Primitives::Plane const & p, ::xfx::Ray const & r, float const & max_t=3.4028234663852885981170418348451692544e+38f ){
    float t2;
    xfx::Vec3 norm2;
    bool result = ::xfx::Primitives::TestIntersection(t2, norm2, p, r, max_t);
    return bp::make_tuple( result, t2, norm2 );
}

static boost::python::tuple TestIntersection_51b037946d3c052e67dff649617fc93f( ::xfx::Primitives::Sphere const & p, ::xfx::Ray const & r, float const & max_t=3.4028234663852885981170418348451692544e+38f ){
    float t2;
    xfx::Vec3 norm2;
    bool result = ::xfx::Primitives::TestIntersection(t2, norm2, p, r, max_t);
    return bp::make_tuple( result, t2, norm2 );
}

static boost::python::tuple TestIntersection_d93a0ee451f073afef5a1d6b85da1079( ::xfx::Primitives::AABB const & p, ::xfx::Ray const & r, float const & max_t=3.4028234663852885981170418348451692544e+38f ){
    float t2;
    xfx::Vec3 norm2;
    bool result = ::xfx::Primitives::TestIntersection(t2, norm2, p, r, max_t);
    return bp::make_tuple( result, t2, norm2 );
}

static boost::python::tuple TestIntersection_387a79c0e6e70668e756bb3c911271c3( ::xfx::Primitives::Triangle const & p, ::xfx::Ray const & r, float const & max_t=3.4028234663852885981170418348451692544e+38f ){
    float t2;
    xfx::Vec3 norm2;
    bool result = ::xfx::Primitives::TestIntersection(t2, norm2, p, r, max_t);
    return bp::make_tuple( result, t2, norm2 );
}

BOOST_PYTHON_MODULE(xfx){
    register_enumerations();

    register__D3DPRESENT_PARAMETERS__class();

    register__D3DVIEWPORT9_class();

    register_AABBTree_class();

    register_ARGB_class();

    register_Application_class();

    register_Transformable3D_class();

    register_BaseParticleSystem_class();

    register_Singleton_less__xfx_scope_BooksManager__greater__class();

    register_BooksManager_class();

    register_Cache_less__xfx_scope_CubemapTexture__greater__class();

    register_Cache_less__xfx_scope_Effect__greater__class();

    register_Cache_less__xfx_scope_Font__greater__class();

    register_Cache_less__xfx_scope_Mesh__greater__class();

    register_Cache_less__xfx_scope_ParticleSystem__greater__class();

    register_Cache_less__xfx_scope_Shader__greater__class();

    register_Cache_less__xfx_scope_Texture__greater__class();

    register_Singleton_less__xfx_scope_Caches__greater__class();

    register_Caches_class();

    register_Singleton_less__xfx_scope_Cmd__greater__class();

    register_Cmd_class();

    register_Console_class();

    register_ITexture_class();

    register_Resource_class();

    register_CubemapTexture_class();

    register_DepthStencil_class();

    register_Mat4_class();

    register_Vec3_class();

    register_DrawTools_class();

    register_Effect_class();

    register_Singleton_less__xfx_scope_Engine__greater__class();

    register_Engine_class();

    register_Envelope_less__float_comma__unsigned_char_comma__xfx_scope_SimpleLerpFn_less__float__greater___greater__class();

    register_Envelope_less__xfx_scope_ARGB_comma__unsigned_char_comma__xfx_scope_SimpleLerpFn_less__xfx_scope_ARGB__greater___greater__class();

    register_Envelope_less__xfx_scope_Quaternion_comma__float_comma__xfx_scope_QuaternionLerpFn__greater__class();

    register_Envelope_less__xfx_scope_Vec3_comma__float_comma__xfx_scope_SimpleLerpFn_less__xfx_scope_Vec3__greater___greater__class();

    register_Euler_class();

    register_Singleton_less__xfx_scope_FileSystem__greater__class();

    register_FileSystem_class();

    register_Script_less__std_scope_string__greater__class();

    register_ScriptResource_class();

    register_Font_class();

    register_key_compare_class();

    register_IndexBuffer_class();

    register_Singleton_less__xfx_scope_Input__greater__class();

    register_Input_class();

    register_Log_class();

    register_Mat3_class();

    register_Singleton_less__xfx_scope_Math__greater__class();

    register_Math_class();

    register_Mesh_class();

    register_MeshState_class();

    register_MessagesBook_class();

    register_Pack_class();

    register_Particle_class();

    register_ParticleSubSystem_class();

    register_ParticleSystem_class();

    register_Primitive_class();

    register_AABB_class();

    register_OBB_class();

    register_Plane_class();

    register_Sphere_class();

    register_Triangle_class();

    register_Singleton_less__xfx_scope_ProfilingManager__greater__class();

    register_ProfilingManager_class();

    register_ProfilingObject_class();

    register_Quaternion_class();

    register_QuaternionLerpFn_class();

    register_Ray_class();

    register_RenderTargetGroup_class();

    register_Transformable2D_class();

    register_RenderedTexture_class();

    register_Singleton_less__xfx_scope_Renderer__greater__class();

    register_Renderer_class();

    register_Shader_class();

    register_ShaderParams_class();

    register_Singleton_less__xfx_scope_Viewport__greater__class();

    register_Texture_class();

    register_Timer_class();

    register_Var_class();

    register_Vec2_class();

    register_Vec4_class();

    register_VertexBuffer_class();

    register_Viewer_class();

    register_Viewport_class();

    { //::xfx::ParseAngleVariable
    
        typedef boost::python::tuple ( *parse_angle_variable_function_type )( unsigned int,::xfx::String const & );
        
        bp::def( 
            "parse_angle_variable"
            , parse_angle_variable_function_type( &ParseAngleVariable_ec1db36b443930f1d6f9ac1cbaabdf62 )
            , ( bp::arg("pos"), bp::arg("str") ) );
    
    }

    { //::xfx::ParseBigAngleVariable
    
        typedef boost::python::tuple ( *parse_big_angle_variable_function_type )( unsigned int,::xfx::String const & );
        
        bp::def( 
            "parse_big_angle_variable"
            , parse_big_angle_variable_function_type( &ParseBigAngleVariable_736284009baaef4f6c7c0ee4de3f9ad4 )
            , ( bp::arg("pos"), bp::arg("str") ) );
    
    }

    { //::xfx::Primitives::TestIntersection
    
        typedef boost::python::tuple ( *test_intersection_plane_function_type )( ::xfx::Primitives::Plane const &,::xfx::Ray const &,float const & );
        
        bp::def( 
            "test_intersection_plane"
            , test_intersection_plane_function_type( &TestIntersection_31cd38322ee306d71491c7ddc7dae489 )
            , ( bp::arg("p"), bp::arg("r"), bp::arg("max_t")=3.4028234663852885981170418348451692544e+38f ) );
    
    }

    { //::xfx::Primitives::TestIntersection
    
        typedef boost::python::tuple ( *test_intersection_sphere_function_type )( ::xfx::Primitives::Sphere const &,::xfx::Ray const &,float const & );
        
        bp::def( 
            "test_intersection_sphere"
            , test_intersection_sphere_function_type( &TestIntersection_51b037946d3c052e67dff649617fc93f )
            , ( bp::arg("p"), bp::arg("r"), bp::arg("max_t")=3.4028234663852885981170418348451692544e+38f ) );
    
    }

    { //::xfx::Primitives::TestIntersection
    
        typedef boost::python::tuple ( *test_intersection_aabb_function_type )( ::xfx::Primitives::AABB const &,::xfx::Ray const &,float const & );
        
        bp::def( 
            "test_intersection_aabb"
            , test_intersection_aabb_function_type( &TestIntersection_d93a0ee451f073afef5a1d6b85da1079 )
            , ( bp::arg("p"), bp::arg("r"), bp::arg("max_t")=3.4028234663852885981170418348451692544e+38f ) );
    
    }

    { //::xfx::Primitives::TestIntersection
    
        typedef boost::python::tuple ( *test_intersection_triangle_function_type )( ::xfx::Primitives::Triangle const &,::xfx::Ray const &,float const & );
        
        bp::def( 
            "test_intersection_triangle"
            , test_intersection_triangle_function_type( &TestIntersection_387a79c0e6e70668e756bb3c911271c3 )
            , ( bp::arg("p"), bp::arg("r"), bp::arg("max_t")=3.4028234663852885981170418348451692544e+38f ) );
    
    }

    register_global_variables();

    register_free_functions();
}

