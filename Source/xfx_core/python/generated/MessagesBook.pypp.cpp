// This file has been generated by Py++.

#include "xfx.h"
#include "boost/python.hpp"
#include "xfx_py_bindings.h"
#include "messagesbook.pypp.hpp"

namespace bp = boost::python;

struct MessagesBook_wrapper : xfx::MessagesBook, bp::wrapper< xfx::MessagesBook > {

    MessagesBook_wrapper(xfx::MessagesBook const & arg )
    : xfx::MessagesBook( arg )
      , bp::wrapper< xfx::MessagesBook >(){
        // copy constructor
        
    }

    MessagesBook_wrapper( )
    : xfx::MessagesBook( )
      , bp::wrapper< xfx::MessagesBook >(){
        // null constructor
    
    }

    virtual ::HRESULT LoadFile( ::xfx::String const & filename ) {
        if( bp::override func_load_file = this->get_override( "load_file" ) )
            return func_load_file( filename );
        else
            return this->xfx::Resource::LoadFile( filename );
    }
    
    
    ::HRESULT default_load_file( ::xfx::String const & filename ) {
        return xfx::Resource::LoadFile( filename );
    }

    virtual ::HRESULT LoadMemory( void const * pmemory, long unsigned int filelen ) {
        if( bp::override func_load_memory = this->get_override( "load_memory" ) )
            return func_load_memory( pmemory, filelen );
        else
            return this->xfx::ScriptResource::LoadMemory( pmemory, filelen );
    }
    
    
    ::HRESULT default_load_memory( void const * pmemory, long unsigned int filelen ) {
        return xfx::ScriptResource::LoadMemory( pmemory, filelen );
    }

};

void register_MessagesBook_class(){

    { //::xfx::MessagesBook
        typedef bp::class_< MessagesBook_wrapper, bp::bases< xfx::ScriptResource > > MessagesBook_exposer_t;
        MessagesBook_exposer_t MessagesBook_exposer = MessagesBook_exposer_t( "MessagesBook", bp::init< >() );
        bp::scope MessagesBook_scope( MessagesBook_exposer );
        { //::xfx::MessagesBook::Entry
            typedef bp::class_< xfx::MessagesBook::Entry > Entry_exposer_t;
            Entry_exposer_t Entry_exposer = Entry_exposer_t( "Entry", bp::init< >() );
            bp::scope Entry_scope( Entry_exposer );
            Entry_exposer.def( bp::init< xfx::WString const & >(( bp::arg("t") )) );
            bp::implicitly_convertible< xfx::WString const &, xfx::MessagesBook::Entry >();
            Entry_exposer.def_readwrite( "text", &xfx::MessagesBook::Entry::text );
            bp::register_ptr_to_python< boost::shared_ptr< xfx::MessagesBook::Entry const > >( );
            bp::implicitly_convertible< boost::shared_ptr< xfx::MessagesBook::Entry >, boost::shared_ptr< xfx::MessagesBook::Entry const > >( );
        }
        { //::xfx::MessagesBook::Clear
        
            typedef void ( ::xfx::MessagesBook::*clear_function_type )(  ) ;
            
            MessagesBook_exposer.def( 
                "clear"
                , clear_function_type( &::xfx::MessagesBook::Clear ) );
        
        }
        { //::xfx::MessagesBook::GetEntry
        
            typedef ::xfx::MessagesBook::Entry const & ( ::xfx::MessagesBook::*get_entry_function_type )( ::xfx::String const & ) const;
            
            MessagesBook_exposer.def( 
                "get_entry"
                , get_entry_function_type( &::xfx::MessagesBook::GetEntry )
                , ( bp::arg("id") )
                , bp::return_value_policy< bp::copy_const_reference >() );
        
        }
        { //::xfx::MessagesBook::IsEntryExists
        
            typedef bool ( ::xfx::MessagesBook::*is_entry_exists_function_type )( ::xfx::String const & ) const;
            
            MessagesBook_exposer.def( 
                "is_entry_exists"
                , is_entry_exists_function_type( &::xfx::MessagesBook::IsEntryExists )
                , ( bp::arg("id") ) );
        
        }
        { //::xfx::Resource::LoadFile
        
            typedef ::HRESULT ( ::xfx::Resource::*load_file_function_type )( ::xfx::String const & ) ;
            typedef ::HRESULT ( MessagesBook_wrapper::*default_load_file_function_type )( ::xfx::String const & ) ;
            
            MessagesBook_exposer.def( 
                "load_file"
                , load_file_function_type(&::xfx::Resource::LoadFile)
                , default_load_file_function_type(&MessagesBook_wrapper::default_load_file)
                , ( bp::arg("filename") ) );
        
        }
        { //::xfx::ScriptResource::LoadMemory
        
            typedef ::HRESULT ( ::xfx::ScriptResource::*load_memory_function_type )( void const *,long unsigned int ) ;
            typedef ::HRESULT ( MessagesBook_wrapper::*default_load_memory_function_type )( void const *,long unsigned int ) ;
            
            MessagesBook_exposer.def( 
                "load_memory"
                , load_memory_function_type(&::xfx::ScriptResource::LoadMemory)
                , default_load_memory_function_type(&MessagesBook_wrapper::default_load_memory)
                , ( bp::arg("pmemory"), bp::arg("filelen") ) );
        
        }
        bp::register_ptr_to_python< boost::shared_ptr< xfx::MessagesBook const > >( );
        bp::implicitly_convertible< boost::shared_ptr< xfx::MessagesBook >, boost::shared_ptr< xfx::MessagesBook const > >( );
    }

}
